{"version":3,"sources":["App.js","images/check.svg","images/select.svg","reportWebVitals.js","index.js"],"names":["globalSetAllRight","globalValues","globalLanguageValue","validate","values","errors","name","email","phoneNumber","language","accept","foundBad","Object","keys","forEach","key","test","length","App","useState","allRight","setAllRight","checkCompleted","setCheckCompleted","checkRef","useRef","toggle","setToggle","fakeSelectValue","setFakeSelectValue","optionOneRef","optionTwoRef","optionThreeRef","optionFourRef","arrayOfOptionsRefs","selectEmulate","id","option","current","value","className","href","initialValues","onSubmit","setSubmitting","setTimeout","alert","JSON","stringify","htmlFor","type","placeholder","as","ref","onClick","src","select","innerRef","click","check","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02735085.chunk.js","sourcesContent":["import React from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { useState, useRef } from 'react';\nimport './App.css';\nimport check from './images/check.svg'\nimport select from './images/select.svg'\n\n// Global variables\nlet globalSetAllRight\nlet globalLanguageValue = ''\nlet globalValues\n\n// Validate function\nconst validate = values => {\n  const errors = {}\n\n  values = values || {\n    name: '',\n    email: '',\n    phoneNumber: '',\n    language: '',\n    accept: false\n  }\n  globalValues = values\n  if(globalLanguageValue !== '') values[\"language\"] = globalLanguageValue\n\n  let foundBad = false\n  Object.keys(values).forEach(key => {\n    if (!values[key]) foundBad = true\n  })\n\n  Object.keys(values).forEach(key => {\n    if (!values[key]) errors[key] = \"Введено некорректное значение\"\n  })\n\n  if (!/^[А-Яа-яA-Za-z -]$/.test(values.name)) errors.name = \"Введено некорректное значение\"\n  else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) errors.email = \"Введено некорректное значение\"\n  else if (!/^(\\+7|7|8)?[\\s\\-]?\\(?[489][0-9]{2}\\)?[\\s\\-]?[0-9]{3}[\\s\\-]?[0-9]{2}[\\s\\-]?[0-9]{2}$/.test(values.phoneNumber)) errors.phoneNumber = \"Введено некорректное значение\"\n\n  if (!foundBad && !Object.keys(errors).length) globalSetAllRight(true)\n\n  return errors\n}\n\nfunction App() {\n  let [allRight, setAllRight] = useState(false)\n  globalSetAllRight = setAllRight\n\n  // Check\n  let [checkCompleted, setCheckCompleted] = useState(false)\n  const checkRef = useRef()\n  const checkEmulate = () => {\n    checkRef.current.click()\n    setCheckCompleted(!checkCompleted)\n  }\n\n  // Select\n  let [toggle, setToggle] = useState(false)\n  let [fakeSelectValue, setFakeSelectValue] = useState('Язык')\n  const optionOneRef = useRef()\n  const optionTwoRef = useRef()\n  const optionThreeRef = useRef()\n  const optionFourRef = useRef()\n  const arrayOfOptionsRefs = [\n    optionOneRef,\n    optionTwoRef,\n    optionThreeRef,\n    optionFourRef\n  ]\n  const selectEmulate = id => {\n    const option = arrayOfOptionsRefs[id].current \n    setFakeSelectValue(option.value)\n    globalLanguageValue = option.value\n    validate(globalValues)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"form\">\n        <div className=\"header\">\n          <h1>Регистрация</h1>\n          <h2>Уже есть аккаунт? <a href=''>Войти</a></h2>\n        </div>\n        <div className=\"main\">\n          <Formik\n            initialValues={{\n              name: '',\n              email: '',\n              phoneNumber: '',\n              language: '',\n              accept: false\n            }}\n            validate={validate}\n            onSubmit={(values, { setSubmitting }) => {\n              setTimeout(() => {\n                alert(JSON.stringify(values, null, 2));\n                setSubmitting(false);\n              }, 400);\n            }}\n          >\n            <Form>\n              <div className=\"group\">\n                <label htmlFor=\"name\">Имя</label>\n                <Field name=\"name\" type=\"text\" placeholder=\"Введите ваше имя\" />\n                <span className=\"error\"><ErrorMessage name=\"name\" /></span>\n              </div>\n\n              <div className=\"group\">\n                <label htmlFor=\"email\">Email</label>\n                <Field name=\"email\" type=\"email\" placeholder=\"Введите ваш email\" />\n                <span className=\"error\"><ErrorMessage name=\"email\" /></span>\n              </div>\n\n              <div className=\"group\">\n                <label htmlFor=\"phoneNumber\">Номер телефона</label>\n                <Field name=\"phoneNumber\" type=\"text\" placeholder=\"Введите номер телефона\" />\n                <span className=\"error\"><ErrorMessage name=\"phoneNumber\" /></span>\n              </div>\n\n              <div className=\"group\">\n                <label htmlFor=\"language\">Язык</label>\n                <Field className=\"hide\" name=\"language\" as=\"select\">\n                  <option ref={optionOneRef} value=\"Русский\">Русский</option>\n                  <option ref={optionTwoRef} value=\"Английский\">Английский</option>\n                  <option ref={optionThreeRef} value=\"Китайский\">Китайский</option>\n                  <option ref={optionFourRef} value=\"Испанский\">Испанский</option>\n                </Field>\n                <div className=\"fakeSelect\">\n                  <div onClick={()=>setToggle(!toggle)} className=\"fakeSelectHeader\">{fakeSelectValue} <img src={select}></img>\n                    <div onClick={()=>setToggle(!toggle)} className={toggle?\"fakeSelectMenu fakeSelectMenuShow\": \"fakeSelectMenu\"}>\n                      <div onClick={() => selectEmulate(0)}>Русский</div>\n                      <div onClick={() => selectEmulate(1)}>Английский</div>\n                      <div onClick={() => selectEmulate(2)}>Китайский</div>\n                      <div onClick={() => selectEmulate(3)}>Испанский</div>\n                    </div>\n                  </div>\n                </div>\n                <span className=\"error\"><ErrorMessage name=\"language\" /></span>\n              </div>\n\n              <div className=\"specialGroup\">\n                <Field innerRef={checkRef} className=\"hide\" type=\"checkbox\" name=\"accept\" />\n                <div className={checkCompleted ? \"showCheck\" : \"\"} onClick={checkEmulate}>\n                  {checkCompleted ? <img src={check}></img> : \"\"}\n                </div>\n                <span className=\"accept\">Принимаю <a href=\"\">условия</a> использования</span>\n                <span className=\"error\"><ErrorMessage name=\"language\" /></span>\n              </div>\n\n              <button disabled={!allRight} className=\"button\" type=\"submit\">Зерегистрироваться</button>\n            </Form>\n          </Formik>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/check.68dc9ac2.svg\";","export default __webpack_public_path__ + \"static/media/select.02a4711a.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}